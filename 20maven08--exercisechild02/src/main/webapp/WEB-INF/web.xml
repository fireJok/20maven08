<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" 
	xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee                       
	http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param> 
	 <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>  
	<!-- 配置前端控制器 -->
	<servlet>
	<!-- springmvc-servlet.xml是SpringMVC的配置文件，
	名字和下面的 <servlet-name>springmvc</servlet-name>
	有关，如果改成<servlet-name>springmvc123</servlet-name>
	则配置文件名为springmvc123-servlet.xml
	配置文件默认放在WEB-INF下；
	[/WEB-INF/springmvc-servlet.xml]
	-->
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- <init-param>的作用是修改xml文件的路径和文件名，添加该标签后
		 springmvc.xml可以放在任何位置-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<!-- 这里配置<load-on-startup>表示自启动，即当servlet启动时就会加载 DispatcherServlet这个
		类-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 
			   这里配置“/”表示除jsp以外的所有请求都会优先进入servlet中 
			   即controller会拦截掉除jsp以外的所有请求
		-->
		<url-pattern>/</url-pattern>	
	</servlet-mapping>
	<!-- 字符编码过滤器，解决中文乱码 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	
</web-app>